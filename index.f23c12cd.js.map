{"mappings":"AAAO,MAAMA,EAAO,CAClBC,KAAMC,SAASC,cAAc,cAC7BC,SAAUF,SAASC,cAAc,eCF5B,SAASE,GAAiBC,SAAEA,EAAQC,SAAEA,EAAQC,GAAEA,IACrD,MAAO,6EACqCA,2BACxCF,cACDC,c,CCFE,IAkBIE,EAAS,CAACC,EAAO,MAC1B,IAAIF,EAAK,GACLG,EAAQC,OAAOC,gBAAgB,IAAIC,WAAWJ,IAClD,KAAOA,KACLF,GCvBF,mEDuBwC,GAAdG,EAAMD,IAEhC,OAAOF,CAAE,EExBJ,SAASO,EAAWC,GACzB,MAAMC,EAAO,CAAET,GAAIC,KAInB,OAHA,IAAIS,SAASF,EAAIG,QAAQC,SAAQ,CAACC,EAAOC,KACvCL,EAAKK,GAAOD,CAAK,IAEZJ,C,CCCT,SAASM,IACP,OAAOC,KAAKC,MAAMC,aAAaC,QATP,YASsC,E,CAGzD,MAAMC,EAAkB,C,IAV/B,SAAaX,GACX,MAAMY,EAAQN,IACdM,EAAMC,KAAKb,GACXS,aAAaK,QALW,SAKgBP,KAAKQ,UAAUH,G,SAOnBN,GCCtCvB,EAAKC,KAAKgC,iBAAiB,UCRpB,SAAuBjB,GAC5BA,EAAIkB,iBACJ,MAAMjB,EAAOF,EAAWC,GACxBY,EAAgBO,IAAIlB,GACpBjB,EAAKI,SAASgC,mBAAmB,YAAa/B,EAAiBY,G,IDKjEjB,EAAKI,SAAS6B,iBAAiB,SEdxB,SAA0BI,GAC/B,GAA0B,WAAtBA,EAAElB,OAAOmB,SACX,OAGSD,EAAElB,OAAOoB,QAAQ/B,GAE5B6B,EAAElB,OAAOqB,QAAQ,MAAMC,Q,ICHlB,WACL,MAAMC,EAAad,EAAgBe,SAEnC3C,EAAKI,SAASgC,mBAAmB,YAA+BM,ECJrDE,IAAIvC,GAAkBwC,KAAK,I,CJYxC","sources":["src/js/refs.js","src/js/createCardMarkup.js","node_modules/nanoid/index.browser.js","node_modules/nanoid/url-alphabet/index.js","src/js/createData.js","src/js/localStorageAPI.js","src/index.js","src/js/handlerSubmit.js","src/js/onDeleteBtnClick.js","src/js/renderCards.js","src/js/createCardsMarkup.js"],"sourcesContent":["export const refs = {\n  form: document.querySelector('#task-form'),\n  taskList: document.querySelector('#task-list'),\n};","export function createCardMarkup({ taskName, taskText, id }) {\n  return ` <li class=\"task-list-item\">\n<button class=\"task-list-item-btn\" data-id='${id}'>Delete</button>\n<h3>${taskName}</h3>\n<p>${taskText}</p>\n</li>`;\n}\n","import { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import { nanoid } from 'nanoid';\n\nexport function createData(evt) {\n  const data = { id: nanoid() };\n  new FormData(evt.target).forEach((value, key) => {\n    data[key] = value;\n  });\n  return data;\n}\n","const LOCAL_STORAGE_KEY = 'LS_KEY';\n\nfunction add(data) {\n  const array = getAll();\n  array.push(data);\n  localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(array));\n}\n\nfunction getAll() {\n  return JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY)) || [];\n}\n\nexport const localStorageAPI = { add, getAll };\n","//  * Розмітка картки задачі\n//  * <li class=\"task-list-item\">\n//  *     <button class=\"task-list-item-btn\">Удалить</button>\n//  *     <h3>Заголовок</h3>\n//  *     <p>Текст</p>\n//  * </li>\n//  *\n\nimport { refs } from './js/refs';\nimport { handlerSubmit } from './js/handlerSubmit';\nimport { renderCards } from './js/renderCards';\nimport { onDeleteBtnClick } from './js/onDeleteBtnClick';\n\nrefs.form.addEventListener('submit', handlerSubmit);\nrefs.taskList.addEventListener('click', onDeleteBtnClick);\nrenderCards();\n","import { createCardMarkup } from './createCardMarkup';\nimport { createData } from './createData';\nimport { localStorageAPI } from './localStorageAPI';\nimport { refs } from './refs';\n\nexport function handlerSubmit(evt) {\n  evt.preventDefault();\n  const data = createData(evt);\n  localStorageAPI.add(data);\n  refs.taskList.insertAdjacentHTML('beforeend', createCardMarkup(data));\n}\n","export function onDeleteBtnClick(e) {\n  if (e.target.nodeName !== 'BUTTON') {\n    return;\n  }\n\n  const id = e.target.dataset.id;\n\n  e.target.closest('li').remove();\n}\n","import { createCardsMarkup } from './createCardsMarkup';\nimport { localStorageAPI } from './localStorageAPI';\nimport { refs } from './refs';\n\nexport function renderCards() {\n  const storedData = localStorageAPI.getAll();\n\n  refs.taskList.insertAdjacentHTML('beforeend', createCardsMarkup(storedData));\n}\n","import { createCardMarkup } from './createCardMarkup';\n\nexport function createCardsMarkup(arr) {\n  return arr.map(createCardMarkup).join('');\n}\n"],"names":["$ee27a4d7c64fc8c4$export$21666b427502ea6d","form","document","querySelector","taskList","$9c0918f23548475a$export$d2cd6c5d5b0de495","taskName","taskText","id","$cf399e049a9c4d34$export$ac4959f4f1338dfc","size","bytes","crypto","getRandomValues","Uint8Array","$e4f73d03f190f807$export$773d79863eecfeab","evt","data","FormData","target","forEach","value","key","$f1e93b4660a948dd$var$getAll","JSON","parse","localStorage","getItem","$f1e93b4660a948dd$export$4a683aab0e79cfdc","array","push","setItem","stringify","addEventListener","preventDefault","add","insertAdjacentHTML","e","nodeName","dataset","closest","remove","storedData","getAll","map","join"],"version":3,"file":"index.f23c12cd.js.map"}